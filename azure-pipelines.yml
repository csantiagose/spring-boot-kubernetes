# Starter pipeline

# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool: Default

stages:
################## Step 1 SAST ##################
 - stage: SAST
   jobs:
   - job: SAST
     displayName: 'Static Analysis and Security Testing'
     steps:
     - task: SonarCloudPrepare@1
       displayName: 'Preparacion Sonar Cloud'
       inputs:
         SonarCloud: 'Sonar'
         organization: 'csantiagos'
         scannerMode: 'Other'
         extraProperties: |
             sonar.projectKey=csantiagos
             sonar.projectName=csantiagos
     - task: Maven@4
       displayName: 'Analisis Maven'
       inputs:
         mavenPomFile: 'pom.xml'
         publishJUnitResults: false
         codeCoverageToolOption: 'JaCoCo'
         javaHomeOption: 'JDKVersion'
         mavenVersionOption: 'Default'
         mavenAuthenticateFeed: false
         effectivePomSkip: false
         sonarQubeRunAnalysis: true
         isJacocoCoverageReportXML: true
         sqMavenPluginVersionChoice: 'latest'
         checkStyleRunAnalysis: true
         pmdRunAnalysis: true
         findBugsRunAnalysis: true
     - task: sonarcloud-buildbreaker@2
       displayName: 'Breaker'
       inputs:
         SonarCloud: 'Sonar'
         organization: 'csantiagos'
     - task: SonarCloudPublish@1
       displayName: 'Publicacion reporte SonarCloud'
       inputs:
         pollingTimeoutSec: '300'


 - stage: SCA
   jobs:
    - job: SCA
      displayName: 'SCA'
      steps:
      - task: Maven@3
        inputs:
          mavenPomFile: 'pom.xml'
          publishJUnitResults: true
          testResultsFiles: '*/surefire-reports/TEST-.xml'
          javaHomeOption: 'JDKVersion'
          mavenVersionOption: 'Default'
          mavenAuthenticateFeed: false
          effectivePomSkip: false
          sonarQubeRunAnalysis: false
      - task: dependency-check-build-task@6
        inputs:
          projectName: 'spring-boot-kubernetes'
          scanPath: '**/*.jar'
          format: 'HTML'
          failOnCVSS: '7'

################## Step 2 CS ##################
 - stage: CS
   jobs:
   - job: CS
     displayName: 'Container Security'
     steps:  
     - task: Maven@4
       displayName: Build app - Maven
       inputs:
         mavenPomFile: 'pom.xml'
         publishJUnitResults: true
         testResultsFiles: '*/surefire-reports/TEST-.xml'
         javaHomeOption: 'JDKVersion'
         mavenVersionOption: 'Default'
         mavenAuthenticateFeed: false
         effectivePomSkip: false
         sonarQubeRunAnalysis: false
     - task: Docker@2
       displayName: 'Registro de docker'
       inputs:
         containerRegistry: 'docker-csantiagos'
         command: 'login'
     - task: Docker@2
       displayName: 'Build and Push'
       inputs:
         containerRegistry: 'docker-csantiagos'
         repository: 'csantiagos/docker-csantiagos'
         command: 'buildAndPush'
         Dockerfile: '**/Dockerfile'
         tags: 'latest'
     - script: |
         sudo apt-get install -y rpm
         wget https://github.com/aquasecurity/trivy/releases/download/v0.27.1/trivy_0.27.1_Linux-64bit.deb
         sudo dpkg -i trivy_0.27.1_Linux-64bit.deb
         trivy image adrianvirus/laboratorio:latest
       displayName: 'Scanner de Imagen Docker'
     - task: CmdLine@2
       displayName: Scan
       inputs:
         script: |
           docker run -v /var/run/docker.sock:/var/run/docker.sock -v $PWD:/app --rm aquasec/trivy image --severity HIGH,CRITICAL --no-progress --format template --template "@contrib/junit.tpl" -o /app/junit-report.xml csantiagos/docker-csantiagos:latest
           cp junit-report.xml $(Build.ArtifactStagingDirectory)/junit-report.xml

     - task: PublishBuildArtifacts@1
       inputs:
         PathtoPublish: '$(Build.ArtifactStagingDirectory)'
         ArtifactName: 'drop'
         publishLocation: 'Container'

     #Publicación de los resultados del análisis
     - task: PublishTestResults@2
       inputs:
         testResultsFormat: 'JUnit'
         testResultsFiles: '**/junit-*.xml'
         mergeTestResults: true
         failTaskOnFailedTests: true
         testRunTitle: 'Trivy'
       condition: 'always()'