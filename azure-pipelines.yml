# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool: default

stages:
- stage: SAST 
  jobs:
  - job: SAST
    displayName: 'SAST'
    steps:

    - task: Maven@4
      inputs:
        mavenPomFile: 'pom.xml'
        publishJUnitResults: true
        testResultsFiles: '*/surefire-reports/TEST-.xml'
        javaHomeOption: 'JDKVersion'
        mavenVersionOption: 'Default'
        mavenAuthenticateFeed: false
        effectivePomSkip: false
        sonarQubeRunAnalysis: false

	- task: SonarCloudPrepare@1
		inputs:
			SonarCloud: 'sonar'
			organization: 'csantiagos'
			projectKey: 'csantiagos'
			projectName: 'csantiagos'
    
	- task: Maven@4
		inputs:
			mavenPomFile: 'pom.xml'
			publishJUnitResults: true
			testResultsFiles: '**/surefire-reports/TEST-*.xml'
			javaHomeOption: 'JDKVersion'
			mavenVersionOption: 'Default'
			sonarQubeRunAnalysis: true
	
- stage: SCA 
  jobs:
  - job: SCA
    displayName: 'SCA'
    steps:
    - task: Maven@3
      inputs:
        mavenPomFile: 'pom.xml'
        publishJUnitResults: true
        testResultsFiles: '*/surefire-reports/TEST-.xml'
        javaHomeOption: 'JDKVersion'
        mavenVersionOption: 'Default'
        mavenAuthenticateFeed: false
        effectivePomSkip: false
        sonarQubeRunAnalysis: false


    - task: dependency-check-build-task@6
      inputs:
        projectName: 'spring-boot-kubernetes'
        scanPath: '$(Build.ArtifactStagingDirectory)'
        format: 'HTML'

    
- stage: ContainerSecurity 
  jobs:
  - job: ContainerSecurity
    displayName: 'ContainerSecurity'
    steps:
    - task: Maven@3
      inputs:
        mavenPomFile: 'pom.xml'
        publishJUnitResults: true
        testResultsFiles: '*/surefire-reports/TEST-.xml'
        javaHomeOption: 'JDKVersion'
        mavenVersionOption: 'Default'
        mavenAuthenticateFeed: false
        effectivePomSkip: false
        sonarQubeRunAnalysis: false
    
    - task: DockerInstaller@0
      inputs:
        dockerVersion: '17.09.0-ce'

    - task: Docker@2
      inputs:
        containerRegistry: 'Docker'
        command: 'login'
    - task: Docker@2
      inputs:
        containerRegistry: 'Docker'
        repository: 'csantiagos/devops-csantiagos'
        command: 'build'
        Dockerfile: '**/Dockerfile'
        tags: latest
      displayName: Build Image

    - script: | 
        sudo apt-get install -y rpm
        wget https://github.com/aquasecurity/trivy/releases/download/v0.27.1/trivy_0.27.1_Linux-64bit.deb
        sudo dpkg -i trivy_0.27.1_Linux-64bit.deb
        trivy image csantiagos/devops-csantiagos:latest
      displayName: Image Scan
    - task: Docker@2
      displayName: Docker push
      inputs:
        containerRegistry: 'Docker'
        repository: 'csantiagos/devops-csantiagos'
        command: 'push'
        tags: 'latest'